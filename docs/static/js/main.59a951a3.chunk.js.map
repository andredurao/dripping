{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","frequency","setFrequency","dripping","setDripping","intervalID","setIntervalID","beep","document","getElementById","play","className","id","src","process","style","type","onClick","clearInterval","undefined","setInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sNAyDeA,MArDf,WAAe,MAEqBC,mBAAS,IAF9B,mBAENC,EAFM,KAEKC,EAFL,OAGmBF,oBAAS,GAH5B,mBAGNG,EAHM,KAGIC,EAHJ,OAIuBJ,qBAJvB,mBAINK,EAJM,KAIMC,EAJN,KAuBPC,EAAO,WACXC,SAASC,eAAe,QAAQC,QAMlC,OACE,sBAAKC,UAAU,MAAf,UACE,uBAAOC,GAAG,OAAOC,IAAKC,eACtB,yBAAQH,UAAU,aAAlB,UACE,qBAAKA,UAAU,iBAAf,SArBGR,GAAY,qBAAKQ,UAAU,OAAOI,MAAO,CAAC,qBAAqB,GAArB,OAAyB,GAAOd,EAAhC,MAA9B,iBAwBf,sBAAKU,UAAU,gBAAf,UACE,wBAAQK,KAAK,SAASC,QApBJ,WACpBhB,EAAY,GACdC,EAAaD,EAAU,IAkBnB,eACA,wBAAQe,KAAK,SAASC,QAxBJ,WACxBf,EAAaD,EAAU,IAuBjB,eACCA,EAHH,uBAKA,qBAAKU,UAAU,gBAAf,SACE,wBAAQK,KAAK,SAASL,UAAU,eAAeM,QAtCnC,WAClBb,GAAaD,GACTA,IACFe,cAAcb,GACdC,OAAca,KAkCV,0BAEF,qBAAKR,UAAU,gBAAf,SACE,wBAAQK,KAAK,SAASL,UAAU,eAAeM,QApBrC,YAEbZ,GAAcC,EAAcc,YAAYb,EADzB,GAAON,EAAa,OAmBhC,2BCtCKoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFxB,SAASC,eAAe,SAM1BY,M","file":"static/js/main.59a951a3.chunk.js","sourcesContent":["// https://codepen.io/andredurao/pen/YzGMXaL\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  // frequency: rate in drops per minute\n  const [frequency, setFrequency] = useState(30);\n  const [dripping, setDripping] = useState(true);\n  const [intervalID, setIntervalID] = useState();\n  const invertState = () => {\n    setDripping(!dripping);\n    if (dripping) {\n      clearInterval(intervalID);\n      setIntervalID(undefined);\n    }\n  }\n  const drop = () => {\n    return dripping && <div className=\"drop\" style={{\"animation-duration\": `${60.0 / frequency}s`}}> </div>;\n  }\n  const increaseFrequency = () => {\n    setFrequency(frequency+1);\n  }\n  const decreaseFrequency = () => {\n    if (frequency > 0){\n      setFrequency(frequency-1);\n    }\n  }\n  const beep = () => {\n    document.getElementById('play').play();\n  };\n  const startBeep = () => {\n    const duration = (60.0 / frequency) * 1000.0;\n    !!!intervalID && setIntervalID(setInterval(beep, duration));\n  }\n  return (\n    <div className=\"App\">\n      <audio id=\"play\" src={process.env.PUBLIC_URL + '/beep.mp3'}></audio>\n      <header className=\"App-header\">\n        <div className=\"drip-container\">\n          { drop() }\n        </div>\n        <div className=\"control-panel\">\n          <button type=\"button\" onClick={decreaseFrequency}>-</button>\n          <button type=\"button\" onClick={increaseFrequency}>+</button>\n          {frequency} drops per minute\n        </div>\n        <div className=\"control-panel\">\n          <button type=\"button\" className=\"start-button\" onClick={invertState}>Start/Stop</button>\n        </div>\n        <div className=\"control-panel\">\n          <button type=\"button\" className=\"start-button\" onClick={startBeep}>beep</button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}