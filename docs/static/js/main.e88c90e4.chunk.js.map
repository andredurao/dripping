{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","frequency","setFrequency","dripping","setDripping","className","style","type","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNAyCeA,MArCf,WAAe,MAEqBC,mBAAS,IAF9B,mBAENC,EAFM,KAEKC,EAFL,OAGmBF,oBAAS,GAH5B,mBAGNG,EAHM,KAGIC,EAHJ,KAkBb,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKA,UAAU,iBAAf,SAbGF,GAAY,qBAAKE,UAAU,OAAOC,MAAO,CAAC,qBAAqB,GAArB,OAAyB,GAAOL,EAAhC,MAA9B,iBAgBf,sBAAKI,UAAU,gBAAf,UACE,wBAAQE,KAAK,SAASC,QAZJ,WACpBP,EAAY,GACdC,EAAaD,EAAU,IAUnB,eACA,wBAAQM,KAAK,SAASC,QAhBJ,WACxBN,EAAaD,EAAU,IAejB,eACCA,EAHH,uBAKA,qBAAKI,UAAU,gBAAf,SACE,wBAAQE,KAAK,SAASF,UAAU,eAAeG,QA1BnC,WAClBJ,GAAaD,IAyBP,gCCtBKM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e88c90e4.chunk.js","sourcesContent":["// https://codepen.io/andredurao/pen/YzGMXaL\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  // frequency: rate in drops per minute\n  const [frequency, setFrequency] = useState(30);\n  const [dripping, setDripping] = useState(true);\n  const invertState = () => {\n    setDripping(!dripping);\n  }\n  const drop = () => {\n    return dripping && <div className=\"drop\" style={{\"animation-duration\": `${60.0 / frequency}s`}}> </div>;\n  }\n  const increaseFrequency = () => {\n    setFrequency(frequency+1);\n  }\n  const decreaseFrequency = () => {\n    if (frequency > 0){\n      setFrequency(frequency-1);\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"drip-container\">\n          { drop() }\n        </div>\n        <div className=\"control-panel\">\n          <button type=\"button\" onClick={decreaseFrequency}>-</button>\n          <button type=\"button\" onClick={increaseFrequency}>+</button>\n          {frequency} drops per minute\n        </div>\n        <div className=\"control-panel\">\n          <button type=\"button\" className=\"start-button\" onClick={invertState}>Start/Stop</button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}