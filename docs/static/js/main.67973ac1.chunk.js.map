{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","frequency","setFrequency","dripping","setDripping","intervalID","setIntervalID","audio","Audio","beep","play","className","style","type","onClick","clearInterval","undefined","then","pause","setInterval","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNA4DeA,MAxDf,WAAe,MAEqBC,mBAAS,IAF9B,mBAENC,EAFM,KAEKC,EAFL,OAGmBF,oBAAS,GAH5B,mBAGNG,EAHM,KAGIC,EAHJ,OAIuBJ,qBAJvB,mBAINK,EAJM,KAIMC,EAJN,KAKPC,EAAQ,IAAIC,MAAM,cAmBlBC,EAAO,WACXF,EAAMG,QAOR,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKA,UAAU,iBAAf,SArBGR,GAAY,qBAAKQ,UAAU,OAAOC,MAAO,CAAC,qBAAqB,GAArB,OAAyB,GAAOX,EAAhC,MAA9B,iBAwBf,sBAAKU,UAAU,gBAAf,UACE,oBAAGA,UAAU,OAAb,UACGV,EADH,uBAGA,wBAAQY,KAAK,SAASF,UAAU,YAAYG,QAvB1B,WACpBb,EAAY,GACdC,EAAaD,EAAU,IAqBnB,eACA,wBAAQY,KAAK,SAASF,UAAU,YAAYG,QA3B1B,WACxBZ,EAAaD,EAAU,IA0BjB,kBAEF,qBAAKU,UAAU,gBAAf,SACE,wBAAQE,KAAK,SAASF,UAAU,eAAeG,QAxCnC,WAClBV,GAAaD,GACTA,IACFY,cAAcV,GACdC,OAAcU,KAoCV,0BAEF,qBAAKL,UAAU,gBAAf,SACE,wBAAQE,KAAK,SAASF,UAAU,eAAeG,QAtBrC,WAChBP,EAAMG,OAAOO,MAAK,kBAAMV,EAAMW,YAE3Bb,GAAcC,EAAca,YAAYV,EADzB,GAAOR,EAAa,OAoBhC,0BCzCKmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.67973ac1.chunk.js","sourcesContent":["// https://codepen.io/andredurao/pen/YzGMXaL\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  // frequency: rate in drops per minute\n  const [frequency, setFrequency] = useState(30);\n  const [dripping, setDripping] = useState(true);\n  const [intervalID, setIntervalID] = useState();\n  const audio = new Audio('./beep.mp3');\n  const invertState = () => {\n    setDripping(!dripping);\n    if (dripping) {\n      clearInterval(intervalID);\n      setIntervalID(undefined);\n    }\n  }\n  const drop = () => {\n    return dripping && <div className='drop' style={{'animation-duration': `${60.0 / frequency}s`}}> </div>;\n  }\n  const increaseFrequency = () => {\n    setFrequency(frequency+1);\n  }\n  const decreaseFrequency = () => {\n    if (frequency > 0){\n      setFrequency(frequency-1);\n    }\n  }\n  const beep = () => {\n    audio.play();\n  };\n  const startBeep = () => {\n    audio.play().then(() => audio.pause());\n    const duration = (60.0 / frequency) * 1000.0;\n    !!!intervalID && setIntervalID(setInterval(beep, duration));\n  }\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <div className='drip-container'>\n          { drop() }\n        </div>\n        <div className='control-panel'>\n          <p className='text'>\n            {frequency} drops per minute\n          </p>\n          <button type='button' className='frequency' onClick={decreaseFrequency}>-</button>\n          <button type='button' className='frequency' onClick={increaseFrequency}>+</button>\n        </div>\n        <div className='control-panel'>\n          <button type='button' className='start-button' onClick={invertState}>Start/Stop</button>\n        </div>\n        <div className='control-panel'>\n          <button type='button' className='start-button' onClick={startBeep}>beep</button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}